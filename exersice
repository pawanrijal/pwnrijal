#1.write a function called is_sorted takes a list as parameter and print the list is sorted or not.
def is_sorted(list1):
    list2=list1[:]
    list2.sort()
    if list1==list2:
        print('List is sorted\nList:',list2)
    else:
        print('list is not sorted\nsorted list is:',list2)
l=[2,3,4,3,6]
is_sorted(l)





#2.write a function called is_anagram which accept two parameter and print whether it is anagram or not.
def is_anagram(word1,word2):
    if(sorted(word1)==sorted(word2)):
        print('Anagram')
    else:
        print('not Anagram')
str1=input('Enter a word')
str2=input('Enter 2nd word')
is_anagram(str1,str2)






#3.write a function called remove_duplicates which accepts a list and return new list with only unique elements.
def remove_duplicates(list1):
    final_list=[]
    for num in list1:
        if num not in final_list:
            final_list.append(num)
    return final_list
l=[1,2,4,4,3,2,3,88,9,88]
new_list=remove_duplicates(l)
print('new list:',new_list)





wap to test the number is prime or not
#4
num=int(input('Enter a number'))
if num>1:
    for i in range(2,num):
        if(num%i==0):
            print(num,'is not a prime number')
            break
    else:
        print(num,'is a prime number')
else:
    print(num,'is not a prime number')




write a program to check a string is palindrome or not
#5.
def reverse(s):
    return s[::-1]
string=input('ENter a string')
tstring=reverse(string)
if(string==tstring):
    print('palindrome')
else:
    print('not palindrome')



write a program to generate a alist of elements only squares between two numbers.

#6
l=list()
for i in range(1,10):
    l.append(i**2)
print('The square list is:',l)




wap to check a number is divisible by another number.
#7
def div(a,b):
    if a%b==0:
        print('Divisible')
    else:
        print('Not divisible')
p=int(input('Enter a number'))
q=int(input('Enter another number'))
div(p,q)





wap to check whether a variable is string or not
#8
var=input('Enter string or int')
if(var.isdigit()):
    print('Integer')
else:
    print('string')





wap to find the indices of all occurence of given item in a list.
#9
listOfElems = ['Hello', 'Ok', 'is', 'Ok', 'test', 'this', 'is', 'a', 'test', 'Ok']
def getIndexPositions(listOfElements, element):
    ''' Returns the indexes of all occurrences of give element in
    the list- listOfElements '''
    indexPosList = []
    indexPos = 0
    while True:
        try:
            # Search for item in list from indexPos to the end of list
            indexPos = listOfElements.index(element, indexPos)
            # Add the index position in list
            indexPosList.append(indexPos)
            indexPos += 1
        except ValueError as e:
            break
 
    return indexPosList
indexPosList = getIndexPositions(listOfElems, 'Ok')
 
print('Indexes of all occurrences of "Ok" in the list are : ', indexPosList)
        
